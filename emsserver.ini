 [Data]
    ;# Interbase connection parameters
    InstanceName=
    Database=host.docker.internal/3050:C:/Users/Public/Documents/Embarcadero/EMS/emsserver.ib
    UserName=sysdba
    Password=masterkey
    SEPassword=
    ;# SEPassword connects to an encrypted database
    Pooled=
    ;# Set Pooled=0 to disable connection pooled, Pooled=1 to enable. Default value is 1.
    PooledMax=
    ;# Set PooledMax=10 to limit maximum pooled connection.  Default value is 50.

    [Server.Limits]
    MaxConnections=
    ;# Set MaxConnections=10 to limit maximum concurrent HTTP requests.  Default is 32.
    MaxUsers=
    ;# Set MaxUsers=3 to limit the number of users in the EMS database.  This value is only used 
    ;# when less than the maximum users permitted by the EMS runtime license.

    [Server.Keys]
    MasterSecret=
    ;# MasterSecret may be blank.  If blank then the EMS server will not support
    ;# MasterSecret authentication.
    ;# HTTP 401 (Unauthorized) is raised if a request contains an incorrect MasterSecret
    AppSecret=
    ;# AppSecret may be blank.  If AppSecret is not blank all requests must include the AppSecret.
    ;# HTTP 401 (Unauthorized) is raised if a request does not contain a correct AppSecret
    ApplicationID=
    ;# ApplicationID may be blank.  If ApplicationID is not blank, all requests must include the ApplicationID.
    ;# HTTP 404 (not found) is raised if a request does not contain a correct ApplicationID

    [Server.Connection.Dev]
    Port=
    ;# The following options enable HTTPS support.
    ; HTTPS=1
    ;# Set HTTPS=1 to enable HTTPS, HTTPS=0 to disable.
    ; CertFile=
    ; RootCertFile=
    ;# When using a self-signed certificate, RootCertFile is left blank.
    ; KeyFile=
    ; KeyFilePassword=

    [Server.APICrossDomain]
    ;# Write here the domains allowed to call the API. Used for Cross-Domains
    ;# Set CrossDomain=* to allow access to any domain.
    CrossDomain=*

    [Server.Threads.Dev]
    ;# The following options control how EMSDevServer manages threads to handle requests
    ;#
    ;# Thread pool options
    ; ThreadPool=1
    ;# Set ThreadPool=1 to enable thread pool scheduler, ThreadPool=0 to disable.
    ; ThreadPoolSize=5
    ;# ThreadPoolSize indicates how many threads are available to handle requests
    ;#
    ;# Queueing options
    ; ListenQueue=100
    ;# ListenQueue indicates how many requests can be queued when all threads are busy

    [Console.Login]
    UserName=
    Password=

    [Console.Cookies]
    User=
    Console=

    [Console.DisplayOptions]
    ;# Set ShowEdgeModules=1 to enable EdgeModules menu options, ShowEdgeModules=0 to disable.
    ShowEdgeModules=1

    [Console.Connection.Dev]
    Port=
    ;# The following options enable HTTPS support.
    ; HTTPS=1
    ;# Set HTTPS=1 to enable HTTPS, HTTPS=0 to disable.
    ; CertFile=
    ; RootCertFile=
    ;# When using a self-signed certificate, RootCertFile is left blank.
    ; KeyFile=
    ; KeyPassword=

    [Console.Browser]
    LimitRows=15
    DateFormat=mm/dd/yy

    [Console.Paths.Dev]
    ResourcesFiles=
    ; WebFiles=
    ;# When WebFiles is left blank, DevConsole will use ResourcesFiles as WebFiles path  
    ;# If WebFiles is used the  Web Server(e.g. IIS) should include in the HTTP-Response-Header 'Access-Control-Allow-Origin' to allow cross-domain request (e.g 'Access-Control-Allow-Origin: *') 

    [Console.Paths.ISAPI]
    ResourcesFiles=
    ; WebFiles=
    ;# When the webresources folder is in the same folder as the .dll, WebFiles is left blank, otherwise URL to the files ( e.g.WebFiles=http://localhost )
    ;# If WebFiles is used the  Web Server (e.g. IIS) should include in the HTTP-Response-Header 'Access-Control-Allow-Origin' to allow cross-domain request (e.g 'Access-Control-Allow-Origin: *') 

    [Console.Paths.Apache]
    ResourcesFiles=
    ;WebFiles=

    [Server.Packages]
    ;# This section is for extension packages.
    ;# Extension packages are used to register custom resource endpoints
    ;c:\mypackages\basicextensions.bpl=mypackage description

    [Server.Push.GCM]
    ;# This section is for Google Cloud Messaging (GCM) settings.
    ;# These settings are needed to send push notificatons to an Android device
    ApiKey=

    [Server.Push.APNS]
    ;# This section is for Apple Push Notification Service (APNS).
    ;# These settings are needed to send push notificatons to an IOS device
    CertificateFileName=
    ;# Name of .p12 or .pem file
    CertificateFilePassword=
    ;# Password of certificate file.  Leave blank if file does not have a password.
    ProductionEnvironment=
    ;# Set ProductionEnvironment=1 when the certificate has been created for production.
    ;# Set ProductionEnvironment=0 when the certificate has been created for development.
    ;# Default value is 0 (development).

    [Server.Authorization]
    ;# This section is for setting authorization requirements for resources and endpoints.
    ;# Authorization can be set on built-in resource (e.g.; Users) and on custom resources.
    ;# Note that when MasterSecret authentication is used, these requirements are ignored.
    ;# Resource settings apply to all endpoints in the resource.
    ;# Endpoint settings override the settings for the resource.
    ;# By default, all resource are public.
    ;# Settings are specified in JSON.
    ;# JSON attributes
    ;#  {"public": true} - any client is authorized
    ;#  {"public": false} - a client may be authorized depending on user or group.  user credentials (sessionid) must passed in the request
    ;#  {"users": ["username1", "username2"]} - authorize a user by username.
    ;#  {"users": ["userid1", "userid2"]} - authorize a user by userid.
    ;#  {"users": ["*"]} - authorize any user.
    ;#  {"groups": ["groupname1", "groupname2"]} - authorize a user in a user group.
    ;#  {"groups": ["*"]} - authorize a user in any user group
    ;#
    ;# Examples
    ;#
    ;# Make all methods in the resource "Users" private except for LoginUser and SignupUser endpoints
    ;Users={"public": false}
    ;Users.LoginUser={"public": true}
    ;Users.SignupUser={"public": true}
    ;#
    ;# Make all methods in the custom resource "Resource1" available to users in group1
    ;Resource1={"groups": ["group1"]}
    ;#
    ;# Make all methods in the custom resource "Resource2" available only with MasterSecret authentication
    ;Resource2={"public": false}
    ;#
    ;# Special rules for user and group creators.
    ;# The creator of user is automatically authorized for the following endpoints:
    ;#   Users.GetUser, Users.UpdateUser, Users.DeleteUser
    ;# The creator of a group is automatically authorized for the following endpoints:
    ;#   Groups.GetGroup, Groups.UpdateGroup, Groups.DeleteGroup

    [Server.Redirect]
    ;# This section is for setting resource redirects.
    ;# Redirects cause custom resources to handle a client request, rather than the
    ;# resource identified in the request URL.
    ;# A redirect may apply to all endpoints in a resource, or to a particular endpoint.
    ;# The destination resource must have an endpoint that handles the HTTP method (e.g.; GET, POST, PUT, DELETE) and URL segments of the
    ;# client request.  Endpoint names are not used to resolve the destination endpoint.
    ;# Examples:
    ;#
    ;# Redirect all endpoints of the built-in resource "Users" to the custom resource "MyUsers"
    ;Users={"destination":"MyUsers"}
    ;#
    ;# Redirect specific endpoints to the custom resource "MyUsers"
    ;Users.LoginUser={"destination":"MyUsers"}
    ;Users.SignupUser={"destination":"MyUsers"}

    [Server.EdgeHTTP]
    ;# Configure proxy for edge module requests
    ;ProxyHost=localhost
    ;ProxyPort=8888
    ;ProxyUserName=
    ;ProxyPassword=

    [Server.Tenants]
    ;# This section defines settings for Single or Multi-Tenant modes.
    ;#
    ;# The MultiTenantMode option is used to turn on the Multi-Tenant mode. 
    ;# If the Multi-Tenant mode is turned on, then TenantId and TenantSecret is required to access EMS Server.
    ;MultiTenantMode=1
    ;#
    ;# Default Tenant is used only in the Single Tenant mode.
    ;DefaultTenantId=00000000-0000-0000-0000-000000000001
    ;#
    ;# Define custom cookie name to store TenantId in EMS Console.
    ;TenantIDCookieName=TenantID

    [Server.Roots]
    ;# This section is for specifying root paths
    ;#
    ;# Specifies the root path for resources
    ;Resources=API

    [Server.PublicPaths]
    ;# Identify directories that contain public files, such as .html
    ;#
    ;# The following entries define two different virtual directories ("images" and "content") 
    ;# that may be used to access static files. The "directory" value indicates the physical 
    ;# location of the static files. The optional "default" value indicates a file 
    ;# that will be dispatched by default when browsing to the root of the virtual directory.
    ;# The optional "mimes" value is an array of MIME file type masks. And optional "extensions" 
    ;# value is an array of file extensions. Only these files will be accessible from this directory.
    ;Path1={"path": "images", "directory": "C:\\web\\images\\", "default": "index.html", "mimes": ["image/*"]}
    ;Path2={"path": "content", "directory": "C:\\web\\content\\", "default": "index.html", "extensions": ["js", "html", "css"]}
